/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pcd1;

import java.awt.Graphics;
import javax.swing.JFileChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Thosiba
 */
public class lat1pcd extends javax.swing.JFrame {
    private ClassGambar lat1pcd;
    private ImageIcon ii;

    /**
     * Creates new form lat1pcd
     */
     public ClassGambar gambar;
    private Object slider_Brightness;
    private Object lbl_SliderNumber;
    public lat1pcd() {
        initComponents();
        slider_Brightnesss.addChangeListener(new SliderListener());
        isSliderUse(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        slider_rotate = new javax.swing.JSlider();
        lbl_derajat = new javax.swing.JLabel();
        slider_Brightnesss = new javax.swing.JSlider();
        lbl_SliderNumberr = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        miBuka = new javax.swing.JMenuItem();
        miSimpan = new javax.swing.JMenuItem();
        miKeluar = new javax.swing.JMenuItem();
        miBrightness = new javax.swing.JMenu();
        miGrayscale = new javax.swing.JMenuItem();
        miBinner = new javax.swing.JMenuItem();
        miDefault = new javax.swing.JMenuItem();
        mibrightness = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        ZoIn = new javax.swing.JMenuItem();
        ZoOut = new javax.swing.JMenuItem();
        FlipV = new javax.swing.JMenuItem();
        FlipH = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mi_rotateRight90 = new javax.swing.JMenuItem();
        mi_rotateLeft90 = new javax.swing.JMenuItem();
        mi_rotate180 = new javax.swing.JMenuItem();
        mi_freeRotate = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PCD1");

        jLabel1.setText("jLabel1");

        slider_rotate.setOrientation(javax.swing.JSlider.VERTICAL);
        slider_rotate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_rotateStateChanged(evt);
            }
        });

        lbl_derajat.setText("0");

        lbl_SliderNumberr.setText("0");

        mnFile.setText("File");

        miBuka.setText("Buka");
        miBuka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBukaActionPerformed(evt);
            }
        });
        mnFile.add(miBuka);

        miSimpan.setText("Simpan");
        miSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSimpanActionPerformed(evt);
            }
        });
        mnFile.add(miSimpan);

        miKeluar.setText("Keluar");
        miKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKeluarActionPerformed(evt);
            }
        });
        mnFile.add(miKeluar);

        jMenuBar1.add(mnFile);

        miBrightness.setText("Edit");

        miGrayscale.setText("Grayscale");
        miGrayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGrayscaleActionPerformed(evt);
            }
        });
        miBrightness.add(miGrayscale);

        miBinner.setText("Biner");
        miBinner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBinnerActionPerformed(evt);
            }
        });
        miBrightness.add(miBinner);

        miDefault.setText("Default");
        miDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDefaultActionPerformed(evt);
            }
        });
        miBrightness.add(miDefault);

        mibrightness.setText("Brightness");
        mibrightness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mibrightnessActionPerformed(evt);
            }
        });
        miBrightness.add(mibrightness);

        jMenuBar1.add(miBrightness);

        jMenu1.setText("Op.Geometri");

        ZoIn.setText("Zoom In");
        ZoIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoInActionPerformed(evt);
            }
        });
        jMenu1.add(ZoIn);

        ZoOut.setText("Zoom Out");
        ZoOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoOutActionPerformed(evt);
            }
        });
        jMenu1.add(ZoOut);

        FlipV.setText("Flip Vetikal");
        FlipV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlipVActionPerformed(evt);
            }
        });
        jMenu1.add(FlipV);

        FlipH.setText("Flip Horisontal");
        FlipH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlipHActionPerformed(evt);
            }
        });
        jMenu1.add(FlipH);

        jMenu2.setText("Rotate");

        mi_rotateRight90.setText("rotate right 90");
        mi_rotateRight90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_rotateRight90ActionPerformed(evt);
            }
        });
        jMenu2.add(mi_rotateRight90);

        mi_rotateLeft90.setText("rotate left 90");
        mi_rotateLeft90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_rotateLeft90ActionPerformed(evt);
            }
        });
        jMenu2.add(mi_rotateLeft90);

        mi_rotate180.setText("rotate 180");
        mi_rotate180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_rotate180ActionPerformed(evt);
            }
        });
        jMenu2.add(mi_rotate180);

        mi_freeRotate.setText("rotate free");
        mi_freeRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_freeRotateActionPerformed(evt);
            }
        });
        jMenu2.add(mi_freeRotate);

        jMenu1.add(jMenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slider_Brightnesss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(slider_rotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_derajat, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_SliderNumberr)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lbl_derajat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider_rotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(slider_Brightnesss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_SliderNumberr)))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class SliderListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            int value;
            value = slider_Brightnesss.getValue();
            String str = Integer.toString(value);
            lbl_SliderNumberr.setText(str);
            gambar.Brightness(slider_Brightnesss.getValue());
            jLabel1.setIcon(gambar.ScaleResultIcon);
            
        }     
    }
    
    private void isSliderUse(boolean kondisi){
        if(kondisi == true){
            
            slider_Brightnesss.setVisible(true);
            lbl_SliderNumberr.setVisible(true);
        } else {
            
            slider_Brightnesss.setVisible(false);
            lbl_SliderNumberr.setVisible(false);
        }
        
    }
    
    @Override
    public void paint (Graphics g) {
        super.paint(g);
        
    }

    
    private void miSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSimpanActionPerformed
        // TODO add your handling code here:
        JFileChooser TDialog = new JFileChooser();
        if(TDialog.showSaveDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            lat1pcd.SaveImage(TDialog.getSelectedFile().getAbsolutePath());
            
        }
    }//GEN-LAST:event_miSimpanActionPerformed

    private void miBukaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBukaActionPerformed
        // TODO add your handling code here:
        JFileChooser TDialog = new JFileChooser();
        if(TDialog.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            lat1pcd=new ClassGambar(TDialog.getSelectedFile().getAbsolutePath(),355,355);
            jLabel1.setIcon(lat1pcd.GetIcon());
        }    
        
    }//GEN-LAST:event_miBukaActionPerformed

    private void miKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKeluarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_miKeluarActionPerformed

    private void miGrayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGrayscaleActionPerformed
        // TODO add your handling code here:
        lat1pcd.Grayscale();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_miGrayscaleActionPerformed

    private void miBinnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBinnerActionPerformed
        // TODO add your handling code here:
        lat1pcd.Biner();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_miBinnerActionPerformed

    private void miDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDefaultActionPerformed
        // TODO add your handling code here:
        lat1pcd.Default();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_miDefaultActionPerformed

    private void mibrightnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mibrightnessActionPerformed
        // TODO add your handling code here:
           lat1pcd.Brightness();
           jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_mibrightnessActionPerformed

    private void ZoInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoInActionPerformed
        // TODO add your handling code here:
        lat1pcd.zoomin();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
        
    }//GEN-LAST:event_ZoInActionPerformed

    private void FlipVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlipVActionPerformed
        // TODO add your handling code here:
        lat1pcd.flipV();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_FlipVActionPerformed

    private void FlipHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlipHActionPerformed
        // TODO add your handling code here:
        lat1pcd.flipH();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
        
    }//GEN-LAST:event_FlipHActionPerformed

    private void ZoOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoOutActionPerformed
        // TODO add your handling code here:
        lat1pcd.zoomout();
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_ZoOutActionPerformed

    private void mi_rotateRight90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_rotateRight90ActionPerformed
        // TODO add your handling code here:
         isSliderUse(false);
        lat1pcd.rotasiCitra(90, this);
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_mi_rotateRight90ActionPerformed

    private void slider_rotateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_rotateStateChanged
        // TODO add your handling code here:
          isSliderUse(false);
        lat1pcd.rotasiCitra((double)slider_rotate.getValue(), this);
        int a = slider_rotate.getValue();
        lbl_derajat.setText(Integer.toString(a));
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
       
    }//GEN-LAST:event_slider_rotateStateChanged

    private void mi_rotateLeft90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_rotateLeft90ActionPerformed
        // TODO add your handling code here:
 isSliderUse(false);
        lat1pcd.rotasiCitra(-90, this);
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_mi_rotateLeft90ActionPerformed

    private void mi_rotate180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_rotate180ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        lat1pcd.rotasiCitra(180, this);
        jLabel1.setIcon(lat1pcd.ScaleResultIcon);
    }//GEN-LAST:event_mi_rotate180ActionPerformed

    private void mi_freeRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_freeRotateActionPerformed
        // TODO add your handling code here:
          slider_rotate.setEnabled(true);
    }//GEN-LAST:event_mi_freeRotateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lat1pcd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lat1pcd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lat1pcd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lat1pcd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lat1pcd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FlipH;
    private javax.swing.JMenuItem FlipV;
    private javax.swing.JMenuItem ZoIn;
    private javax.swing.JMenuItem ZoOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lbl_SliderNumberr;
    private javax.swing.JLabel lbl_derajat;
    private javax.swing.JMenuItem miBinner;
    private javax.swing.JMenu miBrightness;
    private javax.swing.JMenuItem miBuka;
    private javax.swing.JMenuItem miDefault;
    private javax.swing.JMenuItem miGrayscale;
    private javax.swing.JMenuItem miKeluar;
    private javax.swing.JMenuItem miSimpan;
    private javax.swing.JMenuItem mi_freeRotate;
    private javax.swing.JMenuItem mi_rotate180;
    private javax.swing.JMenuItem mi_rotateLeft90;
    private javax.swing.JMenuItem mi_rotateRight90;
    private javax.swing.JMenuItem mibrightness;
    private javax.swing.JMenu mnFile;
    private javax.swing.JSlider slider_Brightnesss;
    private javax.swing.JSlider slider_rotate;
    // End of variables declaration//GEN-END:variables

     //To change body of generated methods, choose Tools | Templates.
}

